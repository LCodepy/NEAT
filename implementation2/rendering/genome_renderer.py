import math
import pickle
import random

import pygame
import pygame.gfxdraw

from implementation2.neat.genome import Genome
from implementation2.neat.neural_network import NeuralNetwork
from implementation2.rendering.event_handler import EventHandler
from implementation2.rendering.label import Label


class GenomeRenderer:

    def __init__(self, genome: Genome, width: int, height: int):
        self.genome = genome
        self.width = width
        self.height = height

        self.fps = 60

        self.win = pygame.display.set_mode((self.width, self.height), pygame.RESIZABLE | pygame.SRCALPHA)
        self.clock = pygame.time.Clock()
        pygame.display.set_caption("NEAT Renderer")

        self.event_handler = EventHandler()

        self.running = False

    def run(self):
        self.running = True

        while self.running:

            self.clock.tick(self.fps)
            pygame.display.update()

            if self.event_handler.resizing:
                self.on_resize()

            self.update()
            self.render()

            if not self.event_handler.loop():
                self.running = False

    def update(self) -> None:
        if not self.event_handler.key_just_pressed(pygame.K_RETURN):
            return

        if random.random() > 0.2:
            if random.random() > 0.1:
                self.genome.mutate_change_weight()
            else:
                self.genome.mutate_assign_new_weight()
        if random.random() > 0.2:
            if random.random() > 0.1:
                self.genome.mutate_change_bias()
            else:
                self.genome.mutate_assign_new_bias()
        if random.random() > 0.7:
            for _ in range(20):
                if self.genome.mutate_add_connection():
                    break
        if random.random() > 0.9:
            self.genome.mutate_add_node()
        if random.random() > 0.9:
            self.genome.mutate_change_enabled()
        if random.random() > 0.9:
            self.genome.mutate_remove_node()
        if random.random() > 0.9:
            self.genome.mutate_remove_connection()

    def render(self) -> None:
        self.win.fill((20, 20, 20))

        # Render genome
        canvas = pygame.Surface((self.width * 3 / 4, self.height * 3 / 4), pygame.SRCALPHA)
        canvas.fill((0, 0, 0, 0))
        self.render_genome(canvas, self.genome)

        self.win.blit(canvas, (self.width // 2 - self.width * 3 // 8, self.height // 2 - self.height * 3 // 8))

    def on_resize(self) -> None:
        self.width, self.height = pygame.display.get_window_size()

    @staticmethod
    def render_genome(canvas: pygame.Surface, genome: Genome, draw_text: bool = True) -> None:
        width, height = canvas.get_size()

        layers = NeuralNetwork.calculate_network_layers(genome)

        max_layer_size = max(map(lambda l: len(l), layers))

        node_width = min(min(width // (len(layers) + 1), height // (max_layer_size + 1)), 20)
        x_step = (width - node_width) // (len(layers) - 1)

        node_coordinates = {node.id: (0, 0) for node in genome.node_genes.values()}

        for i, layer in enumerate(layers):
            x = x_step * i
            h = height
            if i == 0 or i == len(layers) - 1:
                h = int(height * 5 / 6)

            y_step = (h - node_width) // (len(layer) - 1) if len(layer) > 1 else 0
            for j, node in enumerate(layer):
                y = y_step * j
                if len(layer) == 1:
                    y = h // 2 - node_width // 2
                node_coordinates[node] = (x, y + height // 2 - h // 2)

        font_size = int(node_width / 2)

        for connection in genome.connection_genes.values():
            input_node = connection.input_node
            output_node = connection.output_node

            center1 = (node_coordinates[input_node][0] + node_width // 2, node_coordinates[input_node][1] + node_width // 2)
            center2 = (node_coordinates[output_node][0] + node_width // 2, node_coordinates[output_node][1] + node_width // 2)

            tx = center1[0] + (center2[0] - center1[0]) // 2
            ty = center1[1] + (center2[1] - center1[1]) // 2

            color = (160, 160, 160)
            color2 = (255, 255, 255)
            if not connection.enabled:
                color = (70, 70, 70)
                color2 = (90, 90, 90)
            pygame.draw.line(canvas, color, center1, center2)

            if draw_text:
                font = pygame.font.SysFont("arial", font_size - 4)
                if center2[0] - center1[0] != 0:
                    angle = math.degrees(math.atan((center1[1] - center2[1]) / (center2[0] - center1[0])))
                else:
                    angle = 0

                text = pygame.transform.rotate(
                    font.render(f"{connection.input_node}->{connection.output_node}", 1, color2), angle
                )
                canvas.blit(text, (tx - text.get_width() // 2, ty + (0 if ty > height // 2 else -1) * text.get_height()))

        for node_id, (x, y) in node_coordinates.items():
            pygame.draw.circle(canvas, (0, 120, 240), (x + node_width // 2, y + node_width // 2), node_width // 2 - 1)
            # pygame.gfxdraw.filled_circle(canvas, x + node_width // 2, y + node_width // 2, node_width // 2 - 1, (0, 120, 240))

            if draw_text:
                Label.render_text(canvas, str(node_id), (x + node_width // 2, y + node_width // 2), pygame.font.SysFont("arial", font_size),
                                  (255, 255, 255), bold=True)


if __name__ == "__main__":
    # genome = Genome(0, 2, 1, ConnectionFactory(2), NodeFactory(4), NEATConfig())
    data = b'\x80\x04\x95\xbf$\x00\x00\x00\x00\x00\x00\x8c\x1bimplementation2.neat.genome\x94\x8c\x06Genome\x94\x93\x94)\x81\x94}\x94(\x8c\x02id\x94M\x81U\x8c\nnum_inputs\x94K\x0b\x8c\x0bnum_outputs\x94K\x03\x8c\x12connection_factory\x94\x8c\'implementation2.neat.connection_factory\x94\x8c\x11ConnectionFactory\x94\x93\x94)\x81\x94}\x94(\x8c\x18global_innovation_number\x94MF\x02\x8c\x14generation_mutations\x94]\x94(K\x01K\x0fK"\x87\x94K\x0fK\x0eK#\x87\x94K\x04K\x10K$\x87\x94K\x10K\x0cK%\x87\x94K\nK\x11K&\x87\x94K\x11K\rK\'\x87\x94K\x07K\x12K(\x87\x94K\x12K\x0eK)\x87\x94K\x02K\x13K*\x87\x94K\x13K\x0eK+\x87\x94K\x08K\x14K,\x87\x94K\x14K\x0cK-\x87\x94K\x07K\x15K.\x87\x94K\x15K\rK/\x87\x94K\x05K\x16K0\x87\x94K\x16K\rK1\x87\x94K\x02K\x17K2\x87\x94K\x17K\x0cK3\x87\x94K\x01K\x18K4\x87\x94K\x18K\x0cK5\x87\x94K\x04K\x19K6\x87\x94K\x19K\x0eK7\x87\x94K\x06K\x1aK8\x87\x94K\x1aK\x0cK9\x87\x94K\x08K\x1bK:\x87\x94K\x1bK\rK;\x87\x94K\x0bK\x1cK<\x87\x94K\x1cK\rK=\x87\x94K\x05K\x1dK>\x87\x94K\x1dK\x0eK?\x87\x94K\x04K\x0cK@\x87\x94K\tK\x1eKA\x87\x94K\x1eK\x0cKB\x87\x94K\x08K\x15KC\x87\x94K\x06K\x1fKD\x87\x94K\x1fK\x0eKE\x87\x94K\x03K KF\x87\x94K K\rKG\x87\x94K\nK\x10KH\x87\x94K\x08K\x18KI\x87\x94K\tK\x10KJ\x87\x94K\x0bK\x18KK\x87\x94K\x05K\x18KL\x87\x94K\x03K\x18KM\x87\x94K\nK\x18KN\x87\x94K\x08K\x1dKO\x87\x94K\x01K!KP\x87\x94K!K\rKQ\x87\x94K\x03K"KR\x87\x94K"K\x0cKS\x87\x94K\x03K#KT\x87\x94K#K\x0eKU\x87\x94K\tK\x1dKV\x87\x94K\x06K\x18KW\x87\x94K\x08K\rKX\x87\x94K\x08K\x10KY\x87\x94K\x18K\x0eKZ\x87\x94K\tK\x18K[\x87\x94K\x0bK\x10K\\\x87\x94K\x08K$K]\x87\x94K$K\x0eK^\x87\x94K\x06K%K_\x87\x94K%K\rK`\x87\x94K\x05K&Ka\x87\x94K&K\x0cKb\x87\x94K\tK\'Kc\x87\x94K\'K\rKd\x87\x94K\x07K\x14Ke\x87\x94K\x10K\rKf\x87\x94K\x04K\x14Kg\x87\x94K\x07K\x18Kh\x87\x94K\x02K\x18Ki\x87\x94K\x18K\rKj\x87\x94K\tK(Kk\x87\x94K(K\x0eKl\x87\x94K\x0bK)Km\x87\x94K)K\x0cKn\x87\x94K\tK\x14Ko\x87\x94K\x02K\x14Kp\x87\x94K\x10K\x0eKq\x87\x94K\x05K\x10Kr\x87\x94K\x01K\x14Ks\x87\x94K\x14K\x0eKt\x87\x94K\x07K\x10Ku\x87\x94K\x03K\x10Kv\x87\x94K\x07K*Kw\x87\x94K*K\x18Kx\x87\x94K\x03K\x14Ky\x87\x94K\x06K\x10Kz\x87\x94K\x04K\x18K{\x87\x94K\x06K\x14K|\x87\x94K\x01K\x10K}\x87\x94K\x14K\rK~\x87\x94K\x0bK\x14K\x7f\x87\x94K\x05K\x14K\x80\x87\x94K\x14K+K\x81\x87\x94K+K\x0cK\x82\x87\x94K\nK,K\x83\x87\x94K,K\x0cK\x84\x87\x94K\x01K-K\x85\x87\x94K-K\x18K\x86\x87\x94K\x07K.K\x87\x87\x94K.K\x0cK\x88\x87\x94K\nK/K\x89\x87\x94K/K\x0eK\x8a\x87\x94K\x0bK0K\x8b\x87\x94K0K\x0eK\x8c\x87\x94K\x02K1K\x8d\x87\x94K1K\rK\x8e\x87\x94K\x18K2K\x8f\x87\x94K2K\x0cK\x90\x87\x94K\x01K\x0cK\x91\x87\x94K\nK\rK\x92\x87\x94K\nK\x0eK\x93\x87\x94K\x02K\rK\x94\x87\x94K\nK&K\x95\x87\x94K&K\rK\x96\x87\x94K&K\x0eK\x97\x87\x94K\x04K3K\x98\x87\x94K3K\x18K\x99\x87\x94K\nK#K\x9a\x87\x94K\x0bK\rK\x9b\x87\x94K\x08K\x0eK\x9c\x87\x94K\x06K!K\x9d\x87\x94K\x04K!K\x9e\x87\x94K\x04K\x0eK\x9f\x87\x94K\tK4K\xa0\x87\x94K4K\x18K\xa1\x87\x94K\x04K5K\xa2\x87\x94K5K\rK\xa3\x87\x94K\x02K&K\xa4\x87\x94K\tK&K\xa5\x87\x94K\x05K\rK\xa6\x87\x94K\x07K&K\xa7\x87\x94K\x0bK&K\xa8\x87\x94K\x18K6K\xa9\x87\x94K6K\rK\xaa\x87\x94K\x07K\x0cK\xab\x87\x94K\x08K\x1eK\xac\x87\x94K\x06K\x0eK\xad\x87\x94K#K\x0cK\xae\x87\x94K\x04K\rK\xaf\x87\x94K(K\rK\xb0\x87\x94K\nK(K\xb1\x87\x94K\x04K(K\xb2\x87\x94K\x07K(K\xb3\x87\x94K\x03K(K\xb4\x87\x94K\x0bK(K\xb5\x87\x94K\x01K(K\xb6\x87\x94K\x06K(K\xb7\x87\x94K\x08K(K\xb8\x87\x94K\x05K(K\xb9\x87\x94K(K\x0cK\xba\x87\x94K\x02K(K\xbb\x87\x94K\nK\x13K\xbc\x87\x94K\x13K7K\xbd\x87\x94K7K\x0eK\xbe\x87\x94K\x08K\x0cK\xbf\x87\x94K\x04K/K\xc0\x87\x94K\x0bK\x0cK\xc1\x87\x94K\x13K\x0cK\xc2\x87\x94K\x05K\x13K\xc3\x87\x94K\x13K\rK\xc4\x87\x94K\x13K(K\xc5\x87\x94K\x06K\x13K\xc6\x87\x94K(K\x13K\xc7\x87\x94K\x01K\x13K\xc8\x87\x94K\x0bK\x13K\xc9\x87\x94K\x03K\x13K\xca\x87\x94K\x03K8K\xcb\x87\x94K8K(K\xcc\x87\x94K\x04K\x13K\xcd\x87\x94K\tK\x13K\xce\x87\x94K\x01K\x1aK\xcf\x87\x94K\x03K\x1aK\xd0\x87\x94K\x02K\x1aK\xd1\x87\x94K\nK\x1aK\xd2\x87\x94K\x08K\x13K\xd3\x87\x94K\x07K\x13K\xd4\x87\x94K\x08K\x1aK\xd5\x87\x94K\x05K\x1aK\xd6\x87\x94K\x1aK\x0eK\xd7\x87\x94K\x1aK\rK\xd8\x87\x94K\x04K\x1aK\xd9\x87\x94K\x0bK\x1aK\xda\x87\x94K\x07K\x1aK\xdb\x87\x94K\x01K9K\xdc\x87\x94K9K\x1aK\xdd\x87\x94K\tK\x1aK\xde\x87\x94K\x01K\x0eK\xdf\x87\x94K\x01K\rK\xe0\x87\x94K\x06K:K\xe1\x87\x94K:K\x1aK\xe2\x87\x94K\x02K;K\xe3\x87\x94K;K(K\xe4\x87\x94K\nK\x0cK\xe5\x87\x94K\x1aK<K\xe6\x87\x94K<K\x0cK\xe7\x87\x94K\x06K\x0cK\xe8\x87\x94K\x06K\x11K\xe9\x87\x94K\x03K\x11K\xea\x87\x94K\x07K\x11K\xeb\x87\x94K\x07K=K\xec\x87\x94K=K(K\xed\x87\x94K\x03K\x0eK\xee\x87\x94K\x06K\x0fK\xef\x87\x94K\x0fK\rK\xf0\x87\x94K\x03K\x0fK\xf1\x87\x94K\x02K\x0fK\xf2\x87\x94K\tK\x0fK\xf3\x87\x94K\x05K\x0fK\xf4\x87\x94K\x04K\x0fK\xf5\x87\x94K\nK\x0fK\xf6\x87\x94K\x0fK\x0cK\xf7\x87\x94K\x05K\x0cK\xf8\x87\x94K\x02K\x0cK\xf9\x87\x94K\x0bK\x0fK\xfa\x87\x94K\x07K\x0fK\xfb\x87\x94K\x08K\x0fK\xfc\x87\x94K\x02K\x1fK\xfd\x87\x94K\x1fK\rK\xfe\x87\x94K\x07K\x1fK\xff\x87\x94K\x06K\x15M\x00\x01\x87\x94K\x01K\x15M\x01\x01\x87\x94K\x04K\x15M\x02\x01\x87\x94K\x0bK\x15M\x03\x01\x87\x94K\x05K\x15M\x04\x01\x87\x94K\x15K\x0eM\x05\x01\x87\x94K\x15K\x0cM\x06\x01\x87\x94K\x07K>M\x07\x01\x87\x94K>K\x15M\x08\x01\x87\x94K\tK\x15M\t\x01\x87\x94K\x03K\x15M\n\x01\x87\x94K\nK\x15M\x0b\x01\x87\x94K\x0bK\x1fM\x0c\x01\x87\x94K\x01K>M\r\x01\x87\x94K\tK\rM\x0e\x01\x87\x94K\x07K"M\x0f\x01\x87\x94K\x05K"M\x10\x01\x87\x94K\x0bK"M\x11\x01\x87\x94K\tK"M\x12\x01\x87\x94K\nK"M\x13\x01\x87\x94K\x06K"M\x14\x01\x87\x94K\x04K"M\x15\x01\x87\x94K"K\rM\x16\x01\x87\x94K\x01K"M\x17\x01\x87\x94K"K\x0eM\x18\x01\x87\x94K\x08K"M\x19\x01\x87\x94K\x03K\x1fM\x1a\x01\x87\x94K\x1fK\x0cM\x1b\x01\x87\x94K\x05K\x1fM\x1c\x01\x87\x94K\x01K\x1fM\x1d\x01\x87\x94K\nK\x1fM\x1e\x01\x87\x94K\x08K\x1fM\x1f\x01\x87\x94K\x04K?M \x01\x87\x94K?K\x13M!\x01\x87\x94K\x06K#M"\x01\x87\x94K\x08K#M#\x01\x87\x94K\tK\x0eM$\x01\x87\x94K\x05K#M%\x01\x87\x94K\x04K\'M&\x01\x87\x94K\x07K\'M\'\x01\x87\x94K#K\rM(\x01\x87\x94K\x08K\'M)\x01\x87\x94K\x01K\'M*\x01\x87\x94K\x0bK\'M+\x01\x87\x94K\x05K\'M,\x01\x87\x94K\x07K\rM-\x01\x87\x94K\nK\'M.\x01\x87\x94K\x02K#M/\x01\x87\x94K\'K\x0cM0\x01\x87\x94K\x03K\'M1\x01\x87\x94K\x07K#M2\x01\x87\x94K#K@M3\x01\x87\x94K@K\x0eM4\x01\x87\x94K\'K#M5\x01\x87\x94K\'K\x0eM6\x01\x87\x94K\x04K#M7\x01\x87\x94K#K\'M8\x01\x87\x94K\x06K\'M9\x01\x87\x94K\x01K#M:\x01\x87\x94K\nKAM;\x01\x87\x94KAK\x13M<\x01\x87\x94K\x13KBM=\x01\x87\x94KBK\x0cM>\x01\x87\x94K\'KCM?\x01\x87\x94KCK\rM@\x01\x87\x94K\x0bKDMA\x01\x87\x94KDK\'MB\x01\x87\x94K\tKEMC\x01\x87\x94KEK\'MD\x01\x87\x94K\x02K\'ME\x01\x87\x94K\x02KFMF\x01\x87\x94KFK\x13MG\x01\x87\x94K\x0bK\x12MH\x01\x87\x94K\nK\x12MI\x01\x87\x94K K\x13MJ\x01\x87\x94K\x05K MK\x01\x87\x94K\x13K ML\x01\x87\x94K\nK MM\x01\x87\x94K%K\x13MN\x01\x87\x94K\x03K!MO\x01\x87\x94K\'K"MP\x01\x87\x94K\x02K"MQ\x01\x87\x94K%K\x0cMR\x01\x87\x94K\x01KBMS\x01\x87\x94K\x04KBMT\x01\x87\x94K\x02KBMU\x01\x87\x94K\x06KGMV\x01\x87\x94KGK\x13MW\x01\x87\x94K\x05K\x0eMX\x01\x87\x94K\x03KBMY\x01\x87\x94K\tK/MZ\x01\x87\x94K\x03K/M[\x01\x87\x94K\x08K/M\\\x01\x87\x94K\x02K/M]\x01\x87\x94K\x01K/M^\x01\x87\x94K/K\rM_\x01\x87\x94K,K\rM`\x01\x87\x94K,K\x13Ma\x01\x87\x94K,K\x0eMb\x01\x87\x94K\x0bK,Mc\x01\x87\x94K\x05K\x1cMd\x01\x87\x94K\x07K\x1cMe\x01\x87\x94K\x1cK\x0cMf\x01\x87\x94K\x13K\x1cMg\x01\x87\x94K\nK\x1cMh\x01\x87\x94K\x02K\x1cMi\x01\x87\x94K\x08K\x1cMj\x01\x87\x94K\x01K\x1cMk\x01\x87\x94K\x0bKHMl\x01\x87\x94KHK\x13Mm\x01\x87\x94K\tK\x1cMn\x01\x87\x94K K\x0eMo\x01\x87\x94K\x1cK\x13Mp\x01\x87\x94K\x04K\x1cMq\x01\x87\x94K\x06K\x1cMr\x01\x87\x94K\x1cK\x0eMs\x01\x87\x94K\x1cKIMt\x01\x87\x94KIK\rMu\x01\x87\x94K\tK,Mv\x01\x87\x94K\x04K,Mw\x01\x87\x94K\x05K,Mx\x01\x87\x94K\x01KJMy\x01\x87\x94KJK\x13Mz\x01\x87\x94K\tKKM{\x01\x87\x94KKK\x13M|\x01\x87\x94K\x06K,M}\x01\x87\x94K\x03K\x1cM~\x01\x87\x94K\x0bKLM\x7f\x01\x87\x94KLK\x1cM\x80\x01\x87\x94K\x08KMM\x81\x01\x87\x94KMK\x13M\x82\x01\x87\x94K\x13K\x1fM\x83\x01\x87\x94K\x0bK\x0eM\x84\x01\x87\x94K\x04K\x1fM\x85\x01\x87\x94K\tK\x1fM\x86\x01\x87\x94K\x1fK\x13M\x87\x01\x87\x94KKK\rM\x88\x01\x87\x94K\x08KKM\x89\x01\x87\x94K\x0bKKM\x8a\x01\x87\x94K\x01KKM\x8b\x01\x87\x94K\x07K/M\x8c\x01\x87\x94K\x06K/M\x8d\x01\x87\x94K\x03KNM\x8e\x01\x87\x94KNK\x13M\x8f\x01\x87\x94K\x02KKM\x90\x01\x87\x94KKK\x0cM\x91\x01\x87\x94K\x04KKM\x92\x01\x87\x94K\x0bK/M\x93\x01\x87\x94K\x13K/M\x94\x01\x87\x94K/K\x13M\x95\x01\x87\x94K\x0bKNM\x96\x01\x87\x94K\x06KNM\x97\x01\x87\x94KKK\x0eM\x98\x01\x87\x94KKKNM\x99\x01\x87\x94K\x01K%M\x9a\x01\x87\x94K/K\x0cM\x9b\x01\x87\x94K\tK%M\x9c\x01\x87\x94K\x05K/M\x9d\x01\x87\x94K0K\x13M\x9e\x01\x87\x94K\x07K0M\x9f\x01\x87\x94K\tK0M\xa0\x01\x87\x94K\x05K0M\xa1\x01\x87\x94K\x13KOM\xa2\x01\x87\x94KOK\rM\xa3\x01\x87\x94K\nKHM\xa4\x01\x87\x94K\tKHM\xa5\x01\x87\x94KHK\x0cM\xa6\x01\x87\x94K\x02KHM\xa7\x01\x87\x94K\x05KHM\xa8\x01\x87\x94KHK\rM\xa9\x01\x87\x94K\x04KHM\xaa\x01\x87\x94K\x01KHM\xab\x01\x87\x94K\x03KHM\xac\x01\x87\x94K\x1cKPM\xad\x01\x87\x94KPK\x0cM\xae\x01\x87\x94K\x06KHM\xaf\x01\x87\x94K\x03K\rM\xb0\x01\x87\x94K\x07K\x0eM\xb1\x01\x87\x94K\x04KQM\xb2\x01\x87\x94KQK\x1cM\xb3\x01\x87\x94K\x0bK$M\xb4\x01\x87\x94KQK\rM\xb5\x01\x87\x94K\x1cKRM\xb6\x01\x87\x94KRK\x0eM\xb7\x01\x87\x94K\x05KSM\xb8\x01\x87\x94KSK\x1cM\xb9\x01\x87\x94K\tKTM\xba\x01\x87\x94KTK\x1cM\xbb\x01\x87\x94K\x06KUM\xbc\x01\x87\x94KUK\x1cM\xbd\x01\x87\x94K\nKVM\xbe\x01\x87\x94KVK\x1cM\xbf\x01\x87\x94K\x1fKWM\xc0\x01\x87\x94KWK\x0eM\xc1\x01\x87\x94K\x1cK\x1fM\xc2\x01\x87\x94K\x07KXM\xc3\x01\x87\x94KXK\x1fM\xc4\x01\x87\x94K\x04K M\xc5\x01\x87\x94K\x0bK M\xc6\x01\x87\x94K\tK M\xc7\x01\x87\x94K\x02K M\xc8\x01\x87\x94K\tK\x19M\xc9\x01\x87\x94K\x06K\x19M\xca\x01\x87\x94K\x19K\x0cM\xcb\x01\x87\x94K\x06KYM\xcc\x01\x87\x94KYK\x1fM\xcd\x01\x87\x94K\x04K\x11M\xce\x01\x87\x94K\x11K\x0cM\xcf\x01\x87\x94K\tK\x11M\xd0\x01\x87\x94K\x08K\x11M\xd1\x01\x87\x94K\x01K\x11M\xd2\x01\x87\x94K\x0bK\x11M\xd3\x01\x87\x94K\x05K\x11M\xd4\x01\x87\x94K\x02K\x11M\xd5\x01\x87\x94K\x08KZM\xd6\x01\x87\x94KZK\x1fM\xd7\x01\x87\x94K\x08K!M\xd8\x01\x87\x94K\x02K!M\xd9\x01\x87\x94K\x01K[M\xda\x01\x87\x94K[K!M\xdb\x01\x87\x94K\tK!M\xdc\x01\x87\x94K\x1cK!M\xdd\x01\x87\x94K\x07K!M\xde\x01\x87\x94K\nK!M\xdf\x01\x87\x94K!K\x0eM\xe0\x01\x87\x94K\x1fK\\M\xe1\x01\x87\x94K\\K\x0cM\xe2\x01\x87\x94K\x01K]M\xe3\x01\x87\x94K]K\x1fM\xe4\x01\x87\x94K\x06K[M\xe5\x01\x87\x94K\tK^M\xe6\x01\x87\x94K^K\x1fM\xe7\x01\x87\x94K\x01K\x16M\xe8\x01\x87\x94K\x07K\x16M\xe9\x01\x87\x94K\x05K_M\xea\x01\x87\x94K_K\x16M\xeb\x01\x87\x94K\x04K\x16M\xec\x01\x87\x94K\x03K\x16M\xed\x01\x87\x94K\x16K\x1fM\xee\x01\x87\x94K\x1fK\x16M\xef\x01\x87\x94K\x08K\x16M\xf0\x01\x87\x94K\x1cK\x16M\xf1\x01\x87\x94K\x16K\x1cM\xf2\x01\x87\x94K\nK\x16M\xf3\x01\x87\x94K\x0bK\x16M\xf4\x01\x87\x94K\x16K\x0eM\xf5\x01\x87\x94K\x16K\x0cM\xf6\x01\x87\x94K\x06K\x16M\xf7\x01\x87\x94K\tK\x16M\xf8\x01\x87\x94K\x02K\x16M\xf9\x01\x87\x94K\x0bK`M\xfa\x01\x87\x94K`K\x1fM\xfb\x01\x87\x94K\nKaM\xfc\x01\x87\x94KaK\x1fM\xfd\x01\x87\x94K\x07K\x1bM\xfe\x01\x87\x94K\x06K\rM\xff\x01\x87\x94K\x16KbM\x00\x02\x87\x94KbK\rM\x01\x02\x87\x94K\nK`M\x02\x02\x87\x94K\x04K`M\x03\x02\x87\x94K\x07K`M\x04\x02\x87\x94K\x06K`M\x05\x02\x87\x94K\x08K`M\x06\x02\x87\x94K\x03K`M\x07\x02\x87\x94K`K\rM\x08\x02\x87\x94K`K\x0cM\t\x02\x87\x94K\x05K`M\n\x02\x87\x94K\x01K`M\x0b\x02\x87\x94K\tK`M\x0c\x02\x87\x94K`K\x0eM\r\x02\x87\x94K\x02K`M\x0e\x02\x87\x94K\x03K\x0cM\x0f\x02\x87\x94K\tK\x0cM\x10\x02\x87\x94K\x1cKcM\x11\x02\x87\x94KcK\x1fM\x12\x02\x87\x94K\x05K1M\x13\x02\x87\x94K\x07K1M\x14\x02\x87\x94K\x08K1M\x15\x02\x87\x94K\x01K1M\x16\x02\x87\x94K\x06K1M\x17\x02\x87\x94K\x0bK1M\x18\x02\x87\x94K\x04K1M\x19\x02\x87\x94K1K\x0cM\x1a\x02\x87\x94K1K\x0eM\x1b\x02\x87\x94K\x03K1M\x1c\x02\x87\x94K\x05KcM\x1d\x02\x87\x94K\tKdM\x1e\x02\x87\x94KdK\x16M\x1f\x02\x87\x94KcK\x0cM \x02\x87\x94K\x08K&M!\x02\x87\x94K\x03K&M"\x02\x87\x94K\tK1M#\x02\x87\x94K\nK1M$\x02\x87\x94K\x02K\x0eM%\x02\x87\x94K\x05K!M&\x02\x87\x94K\x0bK!M\'\x02\x87\x94K\x04K$M(\x02\x87\x94K!K\x0cM)\x02\x87\x94K K\x0cM*\x02\x87\x94K\x01K M+\x02\x87\x94K\x06K M,\x02\x87\x94K\x07K M-\x02\x87\x94K\x08K M.\x02\x87\x94K!K M/\x02\x87\x94K1KeM0\x02\x87\x94KeK\rM1\x02\x87\x94K\x07K\x19M2\x02\x87\x94K5K\x0eM3\x02\x87\x94K\x01K5M4\x02\x87\x94K\x19K\rM5\x02\x87\x94K5KfM6\x02\x87\x94KfK\rM7\x02\x87\x94K\x02KgM8\x02\x87\x94KgK1M9\x02\x87\x94K\x0bK\x19M:\x02\x87\x94K\x05K\x19M;\x02\x87\x94K\x01K\x19M<\x02\x87\x94K\x02K\x19M=\x02\x87\x94K\x03K\x19M>\x02\x87\x94K\x08K\x19M?\x02\x87\x94K\nK\x19M@\x02\x87\x94K\x04KhMA\x02\x87\x94KhK\x19MB\x02\x87\x94K\x07KiMC\x02\x87\x94KiK\'MD\x02\x87\x94K\x02KjME\x02\x87\x94KjK\'MF\x02\x87\x94eub\x8c\x0cnode_factory\x94\x8c!implementation2.neat.node_factory\x94\x8c\x0bNodeFactory\x94\x93\x94)\x81\x94}\x94(h\x0eKjh\x0f]\x94(K\x01K\x0eK\x0f\x87\x94K\x04K\x0cK\x10\x87\x94K\nK\rK\x11\x87\x94K\x07K\x0eK\x12\x87\x94K\x02K\x0eK\x13\x87\x94K\x08K\x0cK\x14\x87\x94K\x07K\rK\x15\x87\x94K\x05K\rK\x16\x87\x94K\x02K\x0cK\x17\x87\x94K\x01K\x0cK\x18\x87\x94K\x04K\x0eK\x19\x87\x94K\x06K\x0cK\x1a\x87\x94K\x08K\rK\x1b\x87\x94K\x0bK\rK\x1c\x87\x94K\x05K\x0eK\x1d\x87\x94K\tK\x0cK\x1e\x87\x94K\x06K\x0eK\x1f\x87\x94K\x03K\rK \x87\x94K\x01K\rK!\x87\x94K\x03K\x0cK"\x87\x94K\x03K\x0eK#\x87\x94K\x08K\x0eK$\x87\x94K\x06K\rK%\x87\x94K\x05K\x0cK&\x87\x94K\tK\rK\'\x87\x94K\tK\x0eK(\x87\x94K\x0bK\x0cK)\x87\x94K\x07K\x18K*\x87\x94K\x14K\x0cK+\x87\x94K\nK\x0cK,\x87\x94K\x01K\x18K-\x87\x94K\x07K\x0cK.\x87\x94K\nK\x0eK/\x87\x94K\x0bK\x0eK0\x87\x94K\x02K\rK1\x87\x94K\x18K\x0cK2\x87\x94K\x04K\x18K3\x87\x94K\tK\x18K4\x87\x94K\x04K\rK5\x87\x94K\x18K\rK6\x87\x94K\x13K\x0eK7\x87\x94K\x03K(K8\x87\x94K\x01K\x1aK9\x87\x94K\x06K\x1aK:\x87\x94K\x02K(K;\x87\x94K\x1aK\x0cK<\x87\x94K\x07K(K=\x87\x94K\x07K\x15K>\x87\x94K\x04K\x13K?\x87\x94K#K\x0eK@\x87\x94K\nK\x13KA\x87\x94K\x13K\x0cKB\x87\x94K\'K\rKC\x87\x94K\x0bK\'KD\x87\x94K\tK\'KE\x87\x94K\x02K\x13KF\x87\x94K\x06K\x13KG\x87\x94K\x0bK\x13KH\x87\x94K\x1cK\rKI\x87\x94K\x01K\x13KJ\x87\x94K\tK\x13KK\x87\x94K\x0bK\x1cKL\x87\x94K\x08K\x13KM\x87\x94K\x03K\x13KN\x87\x94K\x13K\rKO\x87\x94K\x1cK\x0cKP\x87\x94K\x04K\x1cKQ\x87\x94K\x1cK\x0eKR\x87\x94K\x05K\x1cKS\x87\x94K\tK\x1cKT\x87\x94K\x06K\x1cKU\x87\x94K\nK\x1cKV\x87\x94K\x1fK\x0eKW\x87\x94K\x07K\x1fKX\x87\x94K\x06K\x1fKY\x87\x94K\x08K\x1fKZ\x87\x94K\x01K!K[\x87\x94K\x1fK\x0cK\\\x87\x94K\x01K\x1fK]\x87\x94K\tK\x1fK^\x87\x94K\x05K\x16K_\x87\x94K\x0bK\x1fK`\x87\x94K\nK\x1fKa\x87\x94K\x16K\rKb\x87\x94K\x1cK\x1fKc\x87\x94K\tK\x16Kd\x87\x94K1K\rKe\x87\x94K5K\rKf\x87\x94K\x02K1Kg\x87\x94K\x04K\x19Kh\x87\x94K\x07K\'Ki\x87\x94K\x02K\'Kj\x87\x94eub\x8c\x06config\x94\x8c\x1fimplementation2.neat.neatconfig\x94\x8c\nNEATConfig\x94\x93\x94)\x81\x94}\x94(\x8c\x04name\x94\x8c\x07config1\x94\x8c\x15max_bias_weight_value\x94K\n\x8c\x15min_bias_weight_value\x94J\xf6\xff\xff\xff\x8c\x1dstart_bias_weight_lower_bound\x94J\xff\xff\xff\xff\x8c\x1dstart_bias_weight_upper_bound\x94K\x01\x8c\rgaussian_mean\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x1bgaussian_standard_deviation\x94G@\x00\x00\x00\x00\x00\x00\x00\x8c\x1dspecies_improvement_threshold\x94G?\x84z\xe1G\xae\x14{\x8c\x13species_target_size\x94K\x08\x8c\x18species_target_step_size\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x16weight_mutation_chance\x94G?\xe9\x99\x99\x99\x99\x99\x9a\x8c\x1dchange_weight_mutation_chance\x94G?\xec\xcc\xcc\xcc\xcc\xcc\xcd\x8c\x14bias_mutation_chance\x94G?\xe9\x99\x99\x99\x99\x99\x9a\x8c\x1bchange_bias_mutation_chance\x94G?\xec\xcc\xcc\xcc\xcc\xcc\xcd\x8c\x1eadd_connection_mutation_chance\x94G?\xd9\x99\x99\x99\x99\x99\x9a\x8c\x18add_node_mutation_chance\x94G?\xb4z\xe1G\xae\x14{\x8c!remove_connection_mutation_chance\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x1bremove_node_mutation_chance\x94G?\xb4z\xe1G\xae\x14{\x8c\x16enable_mutation_chance\x94G?\xd0\x00\x00\x00\x00\x00\x00\x8c\x17excess_genes_importance\x94G?\xf0\x00\x00\x00\x00\x00\x00\x8c\x19disjoint_genes_importance\x94G?\xf0\x00\x00\x00\x00\x00\x00\x8c\x1cweight_difference_importance\x94G?\xd9\x99\x99\x99\x99\x99\x9a\x8c\x17compatibility_threshold\x94K\x03\x8c\x12survival_threshold\x94G?\xc9\x99\x99\x99\x99\x99\x9a\x8c&max_allowed_generations_since_improved\x94K\x14ub\x8c\x10node_input_genes\x94]\x94\x8c\x11node_output_genes\x94]\x94\x8c\nnode_genes\x94}\x94(K\x01\x8c\x19implementation2.neat.node\x94\x8c\x08NodeGene\x94\x93\x94)\x81\x94}\x94(h\x05K\x01\x8c\x04type\x94j\xbf\x02\x00\x00\x8c\x08NodeType\x94\x93\x94K\x01\x85\x94R\x94\x8c\x04bias\x94K\x00\x8c\nactivation\x94\x8c)implementation2.neat.activation_functions\x94\x8c\x07sigmoid\x94\x93\x94ubK\x02j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x02j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x03j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x03j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x04j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x04j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x05j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x05j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x06j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x06j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x07j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x07j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x08j\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x08j\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\tj\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\tj\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\nj\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\nj\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x0bj\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x0bj\xc4\x02\x00\x00j\xc8\x02\x00\x00j\xc9\x02\x00\x00K\x00j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x0cj\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x0cj\xc4\x02\x00\x00j\xc6\x02\x00\x00K\x02\x85\x94R\x94j\xc9\x02\x00\x00G?\xe5\xa3\xb9\xf4\xd7\x88\xc1j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\rj\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\rj\xc4\x02\x00\x00j\xe5\x02\x00\x00j\xc9\x02\x00\x00G?\xf2\xcd;\x0f\\6]j\xca\x02\x00\x00j\xcd\x02\x00\x00ubK\x0ej\xc1\x02\x00\x00)\x81\x94}\x94(h\x05K\x0ej\xc4\x02\x00\x00j\xe5\x02\x00\x00j\xc9\x02\x00\x00G\xc0\x1aA)\xa0\xe7\xb9\xbcj\xca\x02\x00\x00j\xcd\x02\x00\x00ubu\x8c\x10connection_genes\x94}\x94(K\x00\x8c\x1fimplementation2.neat.connection\x94\x8c\x0eConnectionGene\x94\x93\x94)\x81\x94}\x94(\x8c\ninput_node\x94K\x01\x8c\x0boutput_node\x94K\x0c\x8c\x06weight\x94G\xbf\xe5;\xf0\xeax^j\x8c\x07enabled\x94\x89\x8c\x11innovation_number\x94K\x00ubK\x01j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x01j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G?\xfa\xeda+2\xd8\xfej\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x01ubK\x02j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x01j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G@\tjZ\xd0\xb1\x00ij\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x02ubK\x03j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x02j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G\xc0\x1c\xee\xb9\xb14\xe3\x0fj\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x03ubK\x04j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x02j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G\xc0\t\x8d"\x87a$tj\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x04ubK\x05j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x02j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G?\xd8Zu\t\x17\xea.j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x05ubK\x06j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x03j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G\xbf\xdd\x88L\xc2\xc4E\xe8j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x06ubK\x07j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x03j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G\xc0\tbRwl\xb9=j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x07ubK\x08j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x03j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G?\xd7wm\x05m\xc7\xa7j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x08ubK\nj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x04j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G\xbf\xdf\xe09\xa5\xc29\x94j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\nubK\x0cj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x05j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G@\x16\xc5\x92\x08/\xa4\xaaj\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x0cubK\x0ej\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x05j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G\xbf\xf9\xc2\xa1\xfa\x94Y\x92j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x0eubK\x0fj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x06j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G?\xdf\xb9\x98\x85\xc2+\xecj\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x0fubK\x10j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x06j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G?\xe2\x06t\x88@\xa9\x00j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x10ubK\x12j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x07j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G?\xecz\xc7DF\xff\xf1j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x12ubK\x13j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x07j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G\xc0\x11s\x9a\xf7\x03V*j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x13ubK\x15j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x08j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G?\xd2\xc9\x84\x83\xd0\x07\xc2j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x15ubK\x16j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x08j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G\xbf\xc0s\x1a\xc2\xbb\x7f\x88j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x16ubK\x17j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x08j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G\xc0\x1dj\x12K\x9bR\xc4j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x17ubK\x18j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\tj\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G?\xf7\xb0\x8f\xcf\xe4\x12\x16j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x18ubK\x19j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\tj\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G?f\x90\x8d2\xbd\xdc\x00j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x19ubK\x1aj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\tj\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G?\xc0\x16*>\t\xf9\x00j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x1aubK\x1bj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\nj\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G?\xfc\xfcs\xce\xd2\xcdFj\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x1bubK\x1dj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\nj\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G\xc0\x04\xebl\xec\xa13\xe1j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x1dubK\x1fj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x0bj\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G@\x15{m\xe3\xffzXj\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x1fubK\x92j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\nj\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G@ \xbf\x05\xe2\xf7\xca&j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\x92ubK@j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x04j\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G?\xe4\xe4\xbd\x04V,Yj\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K@ubK\xa6j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x05j\xf2\x02\x00\x00K\rj\xf3\x02\x00\x00G@\x03\xc1\x89s5=Ij\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\xa6ubK\x9fj\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x04j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G?\xde$\x85N\x83\xe1\xe0j\xf4\x02\x00\x00\x89j\xf5\x02\x00\x00K\x9fubK\xc1j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x0bj\xf2\x02\x00\x00K\x0cj\xf3\x02\x00\x00G\xbf\xb9OK|&\xba\xa0j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00K\xc1ubM\xb1\x01j\xee\x02\x00\x00)\x81\x94}\x94(j\xf1\x02\x00\x00K\x07j\xf2\x02\x00\x00K\x0ej\xf3\x02\x00\x00G?\xe4~\xeak\x81z\x84j\xf4\x02\x00\x00\x88j\xf5\x02\x00\x00M\xb1\x01ubuub.'

    genome = pickle.loads(data)
    renderer = GenomeRenderer(genome, 600, 600)
    renderer.run()
